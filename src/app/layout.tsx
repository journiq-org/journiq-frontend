import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import toast, { Toaster } from 'react-hot-toast';
import { Providers } from "@/redux/Providers";
import "@fortawesome/fontawesome-free/css/all.min.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "journiq",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en" className="scroll-smooth">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-[#E2E0DF] min-h-screen`}
      >
        
        <Providers>
          {/* <Toaster position="top-center" reverseOrder={false} /> */}
          <Toaster
              position="top-center"
              reverseOrder={false}
              toastOptions={{
                // Default style for all toasts
                style: {
                  background: "#111827", // navbar dark gray (bg-gray-900)
                  color: "#f9fafb",      // text-gray-50
                  borderRadius: "8px",
                  padding: "12px 16px",
                },
                success: {
                  style: {
                    background: "#065f46", // green-700
                    color: "#ecfdf5",      // green-50
                  },
                  iconTheme: {
                    primary: "#34d399",   // green-400
                    secondary: "#065f46",
                  },
                },
                error: {
                  style: {
                    background: "#7f1d1d", // red-900
                    color: "#fee2e2",      // red-100
                  },
                  iconTheme: {
                    primary: "#f87171",   // red-400
                    secondary: "#7f1d1d",
                  },
                },
              }}
            />

          {children}
        </Providers>
      </body>
    </html>
  );
}